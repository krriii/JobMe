<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Application List | JobMe</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="h-full bg-gray-100">
    <div class="flex">
        <!-- Sidebar -->
        <nav class="bg-gray-800 w-64 min-h-screen">
            <div class="flex items-center h-16 bg-gray-800 px-4">
                <h1 class="text-white text-2xl font-bold">JobMe</h1>
            </div>
            <div class="mt-5 flex-1 flex flex-col">
                <ul class="space-y-2 px-2">
                    <li>
                        <a href="/api/auth/dashboard/employer"
                            class="flex items-center px-4 py-2 text-gray-300 hover:bg-gray-700 hover:text-white rounded-md">
                            <span class="text-sm font-medium">Dashboard</span>
                        </a>
                    </li>
                    <li>
                        <a href="/dashboard/employer/application-list"
                            class="flex items-center px-4 py-2 text-white bg-gray-700 rounded-md">
                            <span class="text-sm font-medium">Application List</span>
                        </a>
                    </li>
                    <li>
                         <!-- Logout Button -->
                         <a href="#" id="logoutButton"
                         class="flex items-center px-4 py-2 text-gray-300 hover:bg-gray-700 hover:text-white rounded-md">
                         <svg class="text-gray-400 group-hover:text-gray-300 mr-4 flex-shrink-0 h-6 w-6"
                             xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                             stroke="currentColor" aria-hidden="true">
                             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                 d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                         </svg>
                         <span class="text-sm font-medium">Logout</span>
                     </a>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- Main content -->
        <div class="flex-1 flex flex-col">
            <!-- Header -->
            <header class="bg-white shadow-sm">
                <div class="flex items-center justify-between mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8">
                    <h1 class="text-3xl font-bold tracking-tight text-gray-900">Welcome to your dashboard</h1>
                    <div class="relative">
                        <input type="text" id="searchInput"
                            class="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400"
                            placeholder="Search applications...">
                    </div>
                </div>
            </header>

            <!-- Logout Confirmation Modal -->
            <div id="logoutModal" class="fixed inset-0 z-50 hidden overflow-y-auto">
                <div class="flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
                    <div class="fixed inset-0 transition-opacity" aria-hidden="true">
                        <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
                    </div>
                    <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
                    <div class="inline-block overflow-hidden text-center align-bottom transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
                        <div class="px-4 pt-5 pb-4 bg-white sm:p-6 sm:pb-4">
                            <h2 class="text-2xl font-bold mb-4">Logout Confirmation</h2>
                            <p>Are you sure you want to logout from the dashboard?</p>
                            <div class="flex justify-end mt-4">
                                <button id="confirmLogoutButton"
                                    class="bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 transition mr-2">Logout</button>
                                <button id="cancelLogoutButton"
                                    class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600 transition">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Applications List -->
            <!-- <div class="mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8">
                <h2 class="text-2xl font-bold mb-4">Job Applications</h2>
                <div class="relative overflow-x-auto">
                    <table class="w-full text-sm text-left text-gray-500 bg-white shadow-md sm:rounded-lg">
                        <thead class="text-xs text-gray-700 uppercase bg-gray-50">
                            <tr>
                                <th class="px-6 py-3">Job Title</th>
                                <th class="px-6 py-3">Job Seeker Name</th>
                                <th class="px-6 py-3">Job Seeker Email</th>
                                <th class="px-6 py-3">Status</th>
                                <th class="px-6 py-3">Resume</th>
                                <th class="px-6 py-3">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="applicationsTableBody">
                            <% if (application && application.length > 0) { %>
                                <% application.forEach(app => { %>
                                    <tr class="border-b" data-application-id="<%= app.application_id %>">
                                        <td class="px-6 py-4"><%= app.Job.title %></td>
                                        <td class="px-6 py-4"><%= app.JobSeeker.User.name %></td>
                                        <td class="px-6 py-4"><%= app.JobSeeker.User.email %></td>
                                        <td class="px-6 py-4">
                                            <span class="
                                                <%= 
                                                    app.status === 'Accepted' ? 'bg-green-100 text-green-800' : 
                                                    app.status === 'Rejected' ? 'bg-red-100 text-red-800' : 
                                                    'bg-yellow-100 text-yellow-800' 
                                                %> 
                                                px-2 py-1 rounded-full text-xs font-medium"
                                            >
                                                <%= app.status %>
                                            </span>
                                        </td>
                                        <td class="px-6 py-4">
                                            <a href="<%= app.resume_file %>" 
                                               class="text-blue-500 hover:underline" 
                                               download="resume_<%= app.JobSeeker.User.name %>.pdf">
                                                Download Resume
                                            </a>
                                        </td>
                                        <td class="px-6 py-4">
                                            <select 
                                                class="status-dropdown w-full px-2 py-1 border rounded-md text-sm"
                                                onchange="updateApplicationStatus(this)">
                                                <option value="Pending" <%= app.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                                                <option value="Accepted" <%= app.status === 'Accepted' ? 'selected' : '' %>>Accepted</option>
                                                <option value="Rejected" <%= app.status === 'Rejected' ? 'selected' : '' %>>Rejected</option>
                                            </select>
                                        </td>
                                    </tr>
                                <% }) %>
                            <% } else { %>
                                <tr>
                                    <td colspan="6" class="px-6 py-4 text-center text-gray-500">No applications found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div> -->

            <div class="mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8">
                <h2 class="text-2xl font-bold mb-4">Job Applications</h2>
                <div class="relative overflow-x-auto">
                    <table class="w-full text-sm text-left text-gray-500 bg-white shadow-md sm:rounded-lg">
                        <thead class="text-xs text-gray-700 uppercase bg-gray-50">
                            <tr>
                                <th class="px-6 py-3">Job Title</th>
                                <th class="px-6 py-3">Job Seeker Name</th>
                                <th class="px-6 py-3">Job Seeker Email</th>
                                <th class="px-6 py-3">Status</th>
                                <th class="px-6 py-3">Resume</th>
                                <th class="px-6 py-3">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="applicationsTableBody">
                            <% if (application && application.length > 0) { %>
                                <% application.forEach(app => { %>
                                    <tr class="border-b" data-application-id="<%= app.application_id %>">
                                        <td class="px-6 py-4"><%= app.Job.title %></td>
                                        <td class="px-6 py-4"><%= app.JobSeeker.User.name %></td>
                                        <td class="px-6 py-4"><%= app.JobSeeker.User.email %></td>
                                        <td class="px-6 py-4">
                                            <span class="
                                                <%= 
                                                    app.status === 'Accepted' ? 'bg-green-100 text-green-800' : 
                                                    app.status === 'Rejected' ? 'bg-red-100 text-red-800' : 
                                                    'bg-yellow-100 text-yellow-800' 
                                                %> 
                                                px-2 py-1 rounded-full text-xs font-medium"
                                            >
                                                <%= app.status %>
                                            </span>
                                        </td>
                                        <td class="px-6 py-4">
                                            <% if (app.resume_file) { %>
                                                <a href="/uploads/<%= app.resume_file %>" 
                                                   class="text-blue-500 hover:underline" 
                                                   download="resume_<%= app.JobSeeker.User.name %>.pdf">
                                                    Download Resume
                                                </a>
                                            <% } else { %>
                                                <span class="text-gray-500">No resume uploaded</span>
                                            <% } %>
                                        </td>
                                        <td class="px-6 py-4">
                                            <select 
                                                class="status-dropdown w-full px-2 py-1 border rounded-md text-sm"
                                                onchange="updateApplicationStatus(this)">
                                                <option value="Pending" <%= app.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                                                <option value="Accepted" <%= app.status === 'Accepted' ? 'selected' : '' %>>Accepted</option>
                                                <option value="Rejected" <%= app.status === 'Rejected' ? 'selected' : '' %>>Rejected</option>
                                            </select>
                                        </td>
                                    </tr>
                                <% }) %>
                            <% } else { %>
                                <tr>
                                    <td colspan="6" class="px-6 py-4 text-center text-gray-500">No applications found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
            
        </div>
    </div>

    <script>
        // Search functionality
        document.getElementById('searchInput').addEventListener('keyup', function() {
            const searchValue = this.value.toLowerCase();
            const rows = document.querySelectorAll('#applicationsTableBody tr');
            
            rows.forEach(row => {
                const jobTitle = row.cells[0].textContent.toLowerCase();
                const seekerName = row.cells[1].textContent.toLowerCase();
                const seekerEmail = row.cells[2].textContent.toLowerCase();
                
                if (jobTitle.includes(searchValue) || 
                    seekerName.includes(searchValue) || 
                    seekerEmail.includes(searchValue)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });

//         function updateApplicationStatus(selectElement) {
//     const newStatus = selectElement.value;
//     const row = selectElement.closest('tr');
//     const applicationId = row.dataset.applicationId;
//     const statusCell = row.cells[3].querySelector('span');

//     fetch(`/api/applications/${applicationId}/status`, { // Corrected URL
//         method: 'PUT',
//         headers: {
//             'Content-Type': 'application/json'
//         },
//         body: JSON.stringify({ status: newStatus })
//     })
//     .then(response => {
//         if (!response.ok) {
//             // Handle HTTP errors (e.g., 400, 500)
//             console.error(`HTTP error! Status: ${response.status}`);
//             throw new Error(`HTTP error! Status: ${response.status}`); // Re-throw the error
//         }
//         return response.json(); // Parse the JSON
//     })
//     .then(data => {
//         if (data && data.success) {
//             // Update status display
//             statusCell.textContent = newStatus;
//             statusCell.className = `
//                 px-2 py-1 rounded-full text-xs font-medium 
//                 ${newStatus === 'Accepted' ? 'bg-green-100 text-green-800' : 
//                   newStatus === 'Rejected' ? 'bg-red-100 text-red-800' : 
//                   'bg-yellow-100 text-yellow-800'}
//             `;
//         } else {
//             // Handle server-side errors
//             console.error("Server-side error:", data);
//             alert((data && data.message) || "Failed to update status.");
//             selectElement.value = statusCell.textContent.trim(); // Revert the dropdown
//         }
//     })
//     .catch(error => {
//         console.error("Error updating status:", error);
//         alert("An error occurred. Please try again.");
//         selectElement.value = statusCell.textContent.trim(); // Revert the dropdown
//     });
// }

function updateApplicationStatus(selectElement) {
            const newStatus = selectElement.value;
            console.log(`New status is ${newStatus}`);
            const row = selectElement.closest('tr');
            const applicationId = row.dataset.applicationId;
            console.log(`Application ID is ${applicationId}`);
            const statusCell = row.cells[3].querySelector('span');

            fetch(`/api/applications/${applicationId}/status`, { // Corrected URL
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ status: newStatus })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update status display
                    statusCell.textContent = newStatus;
                    statusCell.className = `
                        px-2 py-1 rounded-full text-xs font-medium 
                        ${newStatus === 'Accepted' ? 'bg-green-100 text-green-800' : 
                          newStatus === 'Rejected' ? 'bg-red-100 text-red-800' : 
                          'bg-yellow-100 text-yellow-800'}
                    `;
                } else {
                    alert(data.message || "Failed to update status.");
                    // Revert the dropdown to the previous status
                    selectElement.value = statusCell.textContent.trim();
                }
            })
            .catch(error => {
                console.error("Error updating status:", error);
                alert("An error occurred. Please try again.");
                // Revert the dropdown to the previous status
                selectElement.value = statusCell.textContent.trim();
            });
        }



        // Logout Modal Functionality
        const logoutButton = document.getElementById('logoutButton');
        const logoutModal = document.getElementById('logoutModal');
        const confirmLogoutButton = document.getElementById('confirmLogoutButton');
        const cancelLogoutButton = document.getElementById('cancelLogoutButton');

        logoutButton.addEventListener('click', (e) => {
            e.preventDefault();
            logoutModal.classList.remove('hidden');
        });

        cancelLogoutButton.addEventListener('click', () => {
            logoutModal.classList.add('hidden');
        });

        confirmLogoutButton.addEventListener('click', async () => {
            try {
                const response = await fetch('/api/auth/logout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    // Clear any stored user data
                    localStorage.removeItem('employerId');
                    localStorage.removeItem('userType');

                    // Redirect to the login page
                    window.location.href = '/api/auth/login';
                } else {
                    const data = await response.json();
                    alert(data.message || 'Logout failed. Please try again.');
                }
            } catch (error) {
                console.error('Error during logout:', error);
                alert('An error occurred during logout. Please try again.');
            }
        });
    </script>
</body>
</html>